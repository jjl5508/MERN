{"version":3,"sources":["views/Pets.js","views/EditPet.js","views/NewPet.js","views/Pet.js","App.js","reportWebVitals.js","index.js"],"names":["Pets","props","useState","pets","setPets","useEffect","axios","get","then","res","console","log","data","catch","err","response","sort","a","b","type","to","map","pet","className","name","_id","EditPet","id","useParams","setName","setType","description","setDescription","skill1","setSkill1","skill2","setSkill2","skill3","setSkill3","errors","setErrors","history","useHistory","onClick","e","goBack","onSubmit","preventDefault","editedPet","put","push","handleEditPetSubmit","style","color","message","onChange","target","value","NewPet","post","handleNewPetSubmit","Pet","setPet","padding","delete","App","marginBottom","exact","from","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1c4d6f5e.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Pets = (props) => {\r\n\r\n    const [pets, setPets] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"http://localhost:8000/api/pets\")\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setPets(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, []);\r\n\r\n    const handleDelete = (delId) => {\r\n        axios\r\n            .delete(\"http://localhost:8000/api/pets/\" + delId)\r\n            .then((res) => {\r\n                const filteredPets = pets.filter((pet) => {\r\n                    return pet._id !== delId;\r\n                })\r\n                setPets(filteredPets);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }\r\n    function compare(a, b) {\r\n        if (a.type < b.type) {\r\n            return -1;\r\n        }\r\n        if (a.type > b.type) {\r\n            return 1;\r\n        }\r\n        return 0;\r\n    }\r\n    pets.sort(compare);\r\n    return (\r\n        <div>\r\n            <h1>Pet Shelter</h1>\r\n            <h3> These pets are looking for a good home </h3>\r\n            <div>\r\n                <Link to={'/pets/new'}> Add new Pet </Link>\r\n            </div>\r\n            {pets.map((pet) => {\r\n                return (\r\n                    <div key={pet._id} className = \"pet\">\r\n                        <table>\r\n                            <tr>\r\n                                <th>Name:</th>\r\n                                <th>Type: </th>\r\n                                <th>Actions</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{pet.name}</td>\r\n                                <td> {pet.type} </td>\r\n                                <td>\r\n                                    <Link to={`/pets/${pet._id}`}> Details </Link>\r\n                                    <Link to={`/pets/${pet._id}/edit`}> Edit </Link>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pets;","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst EditPet = (props) => {\r\n    const { id } = useParams();\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n\r\n\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"http://localhost:8000/api/pets/\" + id)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setName(res.data.name);\r\n                setType(res.data.type);\r\n                setDescription(res.data.description);\r\n                setSkill1(res.data.skill1);\r\n                setSkill2(res.data.skill2);\r\n                setSkill3(res.data.skill3);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [id]);\r\n\r\n    const handleEditPetSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const editedPet = {\r\n            name: name,\r\n            type: type,\r\n            description: description,\r\n            skill1: skill1,\r\n            skill2: skill2,\r\n            skill3: skill3,\r\n        };\r\n\r\n        axios\r\n            .put(\"http://localhost:8000/api/pets/\" + id, editedPet)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                history.push(`/pets`);\r\n            })\r\n            .catch((err) => {\r\n                setErrors(err.response.data.errors);\r\n            });\r\n    };\r\n    return (\r\n        <div>\r\n            <h2>Edit Pet: {name}</h2>\r\n            <button onClick={(e) => {\r\n                    history.goBack();\r\n                }}> Go back home</button>\r\n            <form\r\n                onSubmit={(e) => {\r\n                    handleEditPetSubmit(e);\r\n                }}\r\n            >\r\n                <div>\r\n                    <label>Name: </label>\r\n                    {errors?.name && (\r\n                        <span style={{ color: \"red\" }}> {errors?.name?.message}</span>\r\n                    )}\r\n                    <input\r\n                        onChange={(e) => {\r\n                            setName(e.target.value);\r\n                        }}\r\n                        type=\"text\"\r\n                        value={name}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Pet Type:</label>\r\n                    <div>\r\n                        {errors?.type && (\r\n                            <span style={{ color: \"red \" }}> {errors?.type?.message} </span>\r\n                        )}\r\n                    </div>\r\n                    <input onChange={(e) => {\r\n                        setType(e.target.value);\r\n                    }} type=\"text\" \r\n                        value = {type}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Pet description:</label>\r\n                    <div>\r\n                        {errors?.description && (\r\n                            <span style={{ color: \"red \" }}> {errors?.description?.message} </span>\r\n                        )}\r\n                    </div>\r\n                    <input onChange={(e) => {\r\n                        setDescription(e.target.value);\r\n                    }} type=\"text\"  value = {description}/>\r\n                </div>\r\n\r\n                <h1> Skills (optional): </h1>\r\n\r\n                <div>\r\n                    <label>Skill 1:</label>\r\n                    <input onChange={(e) => {\r\n                        setSkill1(e.target.value);\r\n                    }} type=\"text\" value = {skill1} />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Skill 2:</label>\r\n                    <input onChange={(e) => {\r\n                        setSkill2(e.target.value);\r\n                    }} type=\"text\"  value = {skill2}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Skill 3:</label>\r\n                    <input onChange={(e) => {\r\n                        setSkill3(e.target.value);\r\n                    }} type=\"text\"  value = {skill3}/>\r\n                </div>\r\n                <button>Update</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditPet;","import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst NewPet = (props) => {\r\n    const [errors, setErrors] = useState(null);\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [type, setType] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [skill1, setSkill1] = useState(\"\");\r\n    const [skill2, setSkill2] = useState(\"\");\r\n    const [skill3, setSkill3] = useState(\"\");\r\n    \r\n\r\n    const history = useHistory();\r\n\r\n    const handleNewPetSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const NewPet = {\r\n            name: name,\r\n            type: type,\r\n            description: description,\r\n            skill1: skill1,\r\n            skill2: skill2,\r\n            skill3: skill3,\r\n\r\n        };\r\n\r\n        axios\r\n            .post(\"http://localhost:8000/api/pets\", NewPet)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                history.push('/pets');\r\n            })\r\n            .catch((err) => {\r\n                setErrors(err.response.data.errors);\r\n                console.log(err.response.data);\r\n            })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1> Pet Shelter </h1>\r\n            <button onClick={(e) => {\r\n                    history.goBack();\r\n                }}> Go back home</button>\r\n            <form onSubmit={(e) => { handleNewPetSubmit(e) }}>\r\n                <div>\r\n                    <label>Pet Name:</label>\r\n                    <div>\r\n                        {errors?.name && (\r\n                            <span style={{ color: \"red \" }}> {errors?.name?.message} </span>\r\n                        )}\r\n                    </div>\r\n                    <input onChange={(e) => {\r\n                        setName(e.target.value);\r\n                    }} type=\"text\" />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Pet Type:</label>\r\n                    <div>\r\n                        {errors?.type && (\r\n                            <span style={{ color: \"red \" }}> {errors?.type?.message} </span>\r\n                        )}\r\n                    </div>\r\n                    <input onChange={(e) => {\r\n                        setType(e.target.value);\r\n                    }} type=\"text\" />\r\n                </div>\r\n                \r\n                <div>\r\n                    <label>Pet description:</label>\r\n                    <div>\r\n                        {errors?.description && (\r\n                            <span style={{ color: \"red \" }}> {errors?.description?.message} </span>\r\n                        )}\r\n                    </div>\r\n                    <input onChange={(e) => {\r\n                        setDescription(e.target.value);\r\n                    }} type=\"text\" />\r\n                </div>\r\n                <h1> Skills (optional): </h1>\r\n                <div>\r\n                    <label>Skill 1:</label>\r\n                    <input onChange={(e) => {\r\n                        setSkill1(e.target.value);\r\n                    }} type=\"text\" />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Skill 2:</label>\r\n                    <input onChange={(e) => {\r\n                        setSkill2(e.target.value);\r\n                    }} type=\"text\" />\r\n                </div>\r\n\r\n                <div>\r\n                    <label>Skill 3:</label>\r\n                    <input onChange={(e) => {\r\n                        setSkill3(e.target.value);\r\n                    }} type=\"text\" />\r\n                </div>\r\n                <button>Add Pet</button>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPet;","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\n\r\nconst Pet = (props) => {\r\n    const [pet, setPet] = useState(null);\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\"http://localhost:8000/api/pets/\" + id)\r\n            .then((res) => {\r\n                console.log(res.data);\r\n                setPet(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    }, [id]);\r\n\r\n    const handleDelete = () => {\r\n        axios\r\n            .delete(\"http://localhost:8000/api/pets/\" + id)\r\n            .then((res) => {\r\n                history.push(\"/pets\");\r\n            })\r\n            .catch((err) => {\r\n                console.log(err.response);\r\n            });\r\n    };\r\n\r\n    if (pet === null) {\r\n        return \"Loading...\";\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div style={{ padding: 15 }}>\r\n                <h1> Pet Shelter </h1>\r\n                <h3> Details about: {pet.name}</h3>\r\n                <button onClick={(e) => {\r\n                    history.goBack();\r\n                }}> Go back home</button>\r\n                <div>\r\n                    <p> Pet Type: </p>\r\n                    <p>{pet.type}</p>\r\n                </div>\r\n                <div>\r\n                    <p> Description: </p>\r\n                    <p>{pet.description}</p>\r\n                </div>\r\n                <div>\r\n                    <p>Skills: </p>\r\n                    <p>{pet.skill1}</p>\r\n                    <p>{pet.skill2}</p>\r\n                    <p>{pet.skill3}</p>\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <button\r\n                    onClick={(e) => {\r\n                        handleDelete();\r\n                    }}\r\n                >Adopt {pet.name} </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Pet;","import './App.css';\nimport { Link, Route, Redirect, Switch } from 'react-router-dom';\nimport Pets from './views/Pets';\nimport EditPet from './views/EditPet';\nimport NewPet from './views/NewPet';\nimport Pet from './views/Pet';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header style={{marginBottom: 20}}>\n\n      </header>\n\n      <Switch>\n        <Redirect exact from=\"/\" to=\"/pets\" />\n\n        <Route exact path=\"/pets\">\n          <Pets />\n        </Route>\n\n        <Route exact path=\"/pets/new\">\n          <NewPet />\n        </Route>\n\n        <Route exact path= \"/pets/:id\">\n          <Pet />\n        </Route>\n\n        <Route exact path=\"/pets/:id/edit\">\n          <EditPet />\n        </Route>\n\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      < App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}